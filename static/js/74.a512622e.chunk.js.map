{"version":3,"file":"static/js/74.a512622e.chunk.js","mappings":"4JACA,QAA0B,yBAA1B,EAAiE,6BAAjE,EAAqG,sBAArG,EAA2I,+BAA3I,EAAoL,yBAApL,EAA+N,iCAA/N,EAA+Q,8B,aCK/Q,MAIA,EAJyCA,IAAsB,IAArB,GAAEC,EAAE,QAAEC,GAASF,EACvD,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAAEJ,GAAc,E,cCNxD,QAAuB,yBAAvB,EAA2D,6BCkB3D,EAVyCF,IAAc,IAAb,IAAEO,GAAKP,EAC/C,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,UAC1BH,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACJ,UAAWC,EAAiBI,GAAI,YAAcF,EAAIN,GAAGK,SAC3DC,EAAIG,YAEH,E,cCRV,MAYA,GAAeC,E,OAAAA,GAAwC,CAAEC,KAAM,2BAA/D,EAVKC,IAEDV,EAAAA,EAAAA,KAAA,QAAMW,SAAUD,EAAME,aAAaT,UACjCU,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAuBC,SAAA,EACrCH,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,KAAK,iBAAiBC,YAAY,qBAAqBC,UAAU,cACxEjB,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,gBCuBhB,EAvBqCN,IAAmC,IAAlC,YAAEqB,EAAW,YAAEC,GAAatB,EAChE,MAGMuB,EAAmBD,EAAYE,aAAaC,KAAKvB,IACrDC,EAAAA,EAAAA,KAACuB,EAAW,CAAkBxB,QAASA,EAAQyB,KAAM1B,GAAIC,EAAQD,IAA/CC,EAAQD,MAEtB2B,EAAkBN,EAAYO,YAAYJ,KAAKlB,IACnDJ,EAAAA,EAAAA,KAAC2B,EAAW,CAAcvB,IAAKA,GAAbA,EAAIN,MAExB,OACEe,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAeC,SAAA,EAC7BU,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAmBC,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,UAC1BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,SAAEiB,OAEzCpB,EAAAA,EAAAA,KAAC4B,EAAU,CAACjB,SAfKkB,IACrBX,EAAYW,EAAOC,eAAe,QAgBhC9B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAoBC,SAAEsB,MAClC,E,0CCpBV,SAAeM,EAAAA,EAAAA,IACbC,EAAAA,GACAC,EAAAA,EAAAA,KARqBC,IACd,CACLf,YAAae,EAAMf,eAMI,CAAED,YAAaiB,EAAAA,EAAQjB,cAFlD,CAGEkB,E","sources":["webpack://react-social-media/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/MessageItem/MessageItem.tsx","webpack://react-social-media/./src/components/Dialogs/DialogItems/DialogItem.module.css?3db6","components/Dialogs/DialogItems/DialogItem.tsx","components/Dialogs/DialogForm/DialogForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__nCTs4\",\"chatWrapper\":\"Dialogs_chatWrapper__09F4I\",\"chat\":\"Dialogs_chat__GXScF\",\"messagesField\":\"Dialogs_messagesField__amjpe\",\"message\":\"Dialogs_message__6cFal\",\"addMessageField\":\"Dialogs_addMessageField__0KMgX\",\"dialogsItems\":\"Dialogs_dialogsItems__EHDf8\"};","import React from 'react';\r\nimport styles from '../Dialogs.module.css';\r\ntype PropsType = {\r\n  id: number;\r\n  message: string;\r\n};\r\nconst MessageItem: React.FC<PropsType> = ({ id, message }) => {\r\n  return <div className={styles.message}>{message}</div>;\r\n};\r\n\r\nexport default MessageItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogItem_item__SVOHa\",\"itemLink\":\"DialogItem_itemLink__lZFSd\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './DialogItem.module.css';\r\ntype PropsType = {\r\n  obj: {\r\n    id: number;\r\n    userName: string;\r\n  };\r\n};\r\nconst DialogItems: React.FC<PropsType> = ({ obj }) => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <NavLink className={styles.itemLink} to={'/dialogs/' + obj.id}>\r\n        {obj.userName}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItems;\r\n","import React from 'react';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport styles from '../Dialogs.module.css';\r\nimport { NewMessageFormType } from '../Dialogs';\r\n\r\ntype NewMessageFormValuesKeysType = Extract<keyof NewMessageFormType, string>;\r\ntype PropsType = {};\r\nconst DialogForm: React.FC<\r\n  InjectedFormProps<NewMessageFormValuesKeysType, PropsType> & PropsType\r\n> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={styles.addMessageField}>\r\n        <Field name=\"newMessageText\" placeholder=\"Enter your message\" component=\"textarea\" />\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm<NewMessageFormValuesKeysType>({ form: 'dialog-add-message-form' })(\r\n  DialogForm,\r\n);\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport MessageItem from './MessageItem/MessageItem.tsx';\r\nimport DialogItems from './DialogItems/DialogItem.tsx';\r\nimport DialogForm from './DialogForm/DialogForm.tsx';\r\nimport { InitialStateType } from '../../redux/dialogs-reducer.ts';\r\n\r\ntype PropsType = {\r\n  dialogsPage: InitialStateType;\r\n  sendMessage: (newMessageText: string) => void;\r\n};\r\nexport type NewMessageFormType = {\r\n  newMessageText: string;\r\n};\r\nconst Dialogs: React.FC<PropsType> = ({ sendMessage, dialogsPage }) => {\r\n  const addNewMessage = (values: any)=> { // TO DO //////////////////////////////////////\r\n    sendMessage(values.newMessageText);\r\n  };\r\n  const messagesElements = dialogsPage.messagesData.map((message) => (\r\n    <MessageItem key={message.id} message={message.text} id={message.id}/>\r\n  ));\r\n  const dialogsElements = dialogsPage.dialogsData.map((obj) => (\r\n    <DialogItems key={obj.id} obj={obj}></DialogItems>\r\n  ));\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.chatWrapper}>\r\n        <div className={styles.chat}>\r\n          <div className={styles.messagesField}>{messagesElements}</div>\r\n        </div>\r\n        <DialogForm onSubmit={addNewMessage} />\r\n      </div>\r\n      <div className={styles.dialogsItems}>{dialogsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import Dialogs from './Dialogs.tsx';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect.tsx';\r\nimport { compose } from 'redux';\r\nimport { actions } from '../../redux/dialogs-reducer.ts';\r\nimport { AppStateType } from '../../redux/store.ts';\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, { sendMessage: actions.sendMessage }),\r\n)(Dialogs);\r\n"],"names":["_ref","id","message","_jsx","className","styles","children","obj","NavLink","to","userName","reduxForm","form","props","onSubmit","handleSubmit","_jsxs","Field","name","placeholder","component","sendMessage","dialogsPage","messagesElements","messagesData","map","MessageItem","text","dialogsElements","dialogsData","DialogItems","DialogForm","values","newMessageText","compose","withAuthRedirect","connect","state","actions","Dialogs"],"sourceRoot":""}